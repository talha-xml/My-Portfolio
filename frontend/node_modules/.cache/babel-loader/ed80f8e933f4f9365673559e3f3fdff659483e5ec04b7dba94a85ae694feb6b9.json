{"ast":null,"code":"var _jsxFileName = \"/home/talha/Desktop/REAL FS/frontend/src/pages/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../styles/Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [passwordVisible, setPasswordVisible] = useState(false);\n  const [message, setMessage] = useState(\"\"); // state for backend messages\n  const [formData, setFormData] = useState({\n    identifier: \"\",\n    password: \"\"\n  });\n  const togglePasswordVisibility = () => {\n    setPasswordVisible(!passwordVisible);\n  };\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Handle form submit\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\"http://localhost:5000/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData)\n      });\n      const data = await response.json();\n\n      // ✅ Only show Flask messages\n      if (data.error) {\n        setMessage(data.error); // show backend error\n      } else if (data.message) {\n        setMessage(data.message); // show backend success\n      }\n    } catch (err) {\n      // Network or server crash → generic message\n      setMessage(\"⚠️ Unable to connect to the server. Please try again later.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"login-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"identifier\",\n          placeholder: \"Enter Email or Username\",\n          className: \"login-input\",\n          value: formData.identifier,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"password-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: passwordVisible ? \"text\" : \"password\",\n            name: \"password\",\n            placeholder: \"Password\",\n            className: \"login-input password-input\",\n            value: formData.password,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"toggle-password-btn\",\n            onClick: togglePasswordVisibility,\n            children: passwordVisible ? \"Hide\" : \"Show\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"login-btn\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"login-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"login-footer\",\n        children: [\"New to our service? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signup\",\n          children: /*#__PURE__*/_jsxDEV(\"u\", {\n            children: \"Sign Up Here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"/zUNdrJF8NucB/JVPkgKWXR3JYc=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Link","jsxDEV","_jsxDEV","Login","_s","passwordVisible","setPasswordVisible","message","setMessage","formData","setFormData","identifier","password","togglePasswordVisibility","handleChange","e","target","name","value","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","error","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","onClick","to","_c","$RefreshReg$"],"sources":["/home/talha/Desktop/REAL FS/frontend/src/pages/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../styles/Login.css\";\n\nfunction Login() {\n  const [passwordVisible, setPasswordVisible] = useState(false);\n  const [message, setMessage] = useState(\"\"); // state for backend messages\n  const [formData, setFormData] = useState({\n    identifier: \"\",\n    password: \"\"\n  });\n\n  const togglePasswordVisibility = () => {\n    setPasswordVisible(!passwordVisible);\n  };\n\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Handle form submit\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const response = await fetch(\"http://localhost:5000/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData)\n      });\n\n      const data = await response.json();\n\n      // ✅ Only show Flask messages\n      if (data.error) {\n        setMessage(data.error); // show backend error\n      } else if (data.message) {\n        setMessage(data.message); // show backend success\n      }\n    } catch (err) {\n      // Network or server crash → generic message\n      setMessage(\"⚠️ Unable to connect to the server. Please try again later.\");\n    }\n  };\n\n  return (\n    <div className=\"login-page\">\n      <div className=\"login-container\">\n        <h1>Login</h1>\n        <form className=\"login-form\" onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            name=\"identifier\"\n            placeholder=\"Enter Email or Username\"\n            className=\"login-input\"\n            value={formData.identifier}\n            onChange={handleChange}\n            required\n          />\n\n          <div className=\"password-wrapper\">\n            <input\n              type={passwordVisible ? \"text\" : \"password\"}\n              name=\"password\"\n              placeholder=\"Password\"\n              className=\"login-input password-input\"\n              value={formData.password}\n              onChange={handleChange}\n              required\n            />\n            <button\n              type=\"button\"\n              className=\"toggle-password-btn\"\n              onClick={togglePasswordVisibility}\n            >\n              {passwordVisible ? \"Hide\" : \"Show\"}\n            </button>\n          </div>\n\n          <button type=\"submit\" className=\"login-btn\">Login</button>\n        </form>\n\n        {/* ✅ Flask messages appear here */}\n        {message && <p className=\"login-message\">{message}</p>}\n\n        <p className=\"login-footer\">\n          New to our service? <Link to=\"/signup\"><u>Sign Up Here</u></Link>\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC;IACvCY,UAAU,EAAE,EAAE;IACdC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAMC,wBAAwB,GAAGA,CAAA,KAAM;IACrCP,kBAAkB,CAAC,CAACD,eAAe,CAAC;EACtC,CAAC;EAED,MAAMS,YAAY,GAAIC,CAAC,IAAK;IAC1BL,WAAW,CAAC;MACV,GAAGD,QAAQ;MACX,CAACM,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAC5B,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMC,YAAY,GAAG,MAAOJ,CAAC,IAAK;IAChCA,CAAC,CAACK,cAAc,CAAC,CAAC;IAElB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;QAC1DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAClB,QAAQ;MAC/B,CAAC,CAAC;MAEF,MAAMmB,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;;MAElC;MACA,IAAID,IAAI,CAACE,KAAK,EAAE;QACdtB,UAAU,CAACoB,IAAI,CAACE,KAAK,CAAC,CAAC,CAAC;MAC1B,CAAC,MAAM,IAAIF,IAAI,CAACrB,OAAO,EAAE;QACvBC,UAAU,CAACoB,IAAI,CAACrB,OAAO,CAAC,CAAC,CAAC;MAC5B;IACF,CAAC,CAAC,OAAOwB,GAAG,EAAE;MACZ;MACAvB,UAAU,CAAC,6DAA6D,CAAC;IAC3E;EACF,CAAC;EAED,oBACEN,OAAA;IAAK8B,SAAS,EAAC,YAAY;IAAAC,QAAA,eACzB/B,OAAA;MAAK8B,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9B/B,OAAA;QAAA+B,QAAA,EAAI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACdnC,OAAA;QAAM8B,SAAS,EAAC,YAAY;QAACM,QAAQ,EAAEnB,YAAa;QAAAc,QAAA,gBAClD/B,OAAA;UACEqC,IAAI,EAAC,MAAM;UACXtB,IAAI,EAAC,YAAY;UACjBuB,WAAW,EAAC,yBAAyB;UACrCR,SAAS,EAAC,aAAa;UACvBd,KAAK,EAAET,QAAQ,CAACE,UAAW;UAC3B8B,QAAQ,EAAE3B,YAAa;UACvB4B,QAAQ;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eAEFnC,OAAA;UAAK8B,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAC/B/B,OAAA;YACEqC,IAAI,EAAElC,eAAe,GAAG,MAAM,GAAG,UAAW;YAC5CY,IAAI,EAAC,UAAU;YACfuB,WAAW,EAAC,UAAU;YACtBR,SAAS,EAAC,4BAA4B;YACtCd,KAAK,EAAET,QAAQ,CAACG,QAAS;YACzB6B,QAAQ,EAAE3B,YAAa;YACvB4B,QAAQ;UAAA;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC,eACFnC,OAAA;YACEqC,IAAI,EAAC,QAAQ;YACbP,SAAS,EAAC,qBAAqB;YAC/BW,OAAO,EAAE9B,wBAAyB;YAAAoB,QAAA,EAEjC5B,eAAe,GAAG,MAAM,GAAG;UAAM;YAAA6B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eAENnC,OAAA;UAAQqC,IAAI,EAAC,QAAQ;UAACP,SAAS,EAAC,WAAW;UAAAC,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtD,CAAC,EAGN9B,OAAO,iBAAIL,OAAA;QAAG8B,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAE1B;MAAO;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEtDnC,OAAA;QAAG8B,SAAS,EAAC,cAAc;QAAAC,QAAA,GAAC,sBACN,eAAA/B,OAAA,CAACF,IAAI;UAAC4C,EAAE,EAAC,SAAS;UAAAX,QAAA,eAAC/B,OAAA;YAAA+B,QAAA,EAAG;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACjC,EAAA,CA5FQD,KAAK;AAAA0C,EAAA,GAAL1C,KAAK;AA8Fd,eAAeA,KAAK;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}