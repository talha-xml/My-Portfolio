{"ast":null,"code":"var _jsxFileName = \"/home/talha/Desktop/REAL FS/frontend/src/context/ActivityStatus.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/context/ActivityStatus.js\nimport React, { createContext, useState, useEffect, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AuthContext } from \"./AuthContext\"; // your existing AuthContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ActivityContext = /*#__PURE__*/createContext();\nexport const ActivityProvider = ({\n  children,\n  timeout = 10000\n}) => {\n  _s();\n  const {\n    logout,\n    user\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const [isActive, setIsActive] = useState(true);\n  useEffect(() => {\n    if (!user) return; // if not logged in, do nothing\n\n    let timer;\n    const resetTimer = () => {\n      setIsActive(true);\n      clearTimeout(timer);\n      timer = setTimeout(() => {\n        setIsActive(false);\n        logout();\n        navigate(\"/login\");\n      }, timeout);\n    };\n    const events = [\"mousemove\", \"keydown\", \"scroll\", \"touchstart\"];\n    events.forEach(event => window.addEventListener(event, resetTimer));\n    resetTimer(); // start timer immediately\n\n    return () => {\n      clearTimeout(timer);\n      events.forEach(event => window.removeEventListener(event, resetTimer));\n    };\n  }, [logout, navigate, timeout, user]);\n  return /*#__PURE__*/_jsxDEV(ActivityContext.Provider, {\n    value: {\n      isActive\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook for easier use in components\n_s(ActivityProvider, \"FLYFpSHLbEqp7WzHf2BRHk3qlB8=\", false, function () {\n  return [useNavigate];\n});\n_c = ActivityProvider;\nexport const useActivity = () => {\n  _s2();\n  return useContext(ActivityContext);\n};\n_s2(useActivity, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"ActivityProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","useNavigate","AuthContext","jsxDEV","_jsxDEV","ActivityContext","ActivityProvider","children","timeout","_s","logout","user","navigate","isActive","setIsActive","timer","resetTimer","clearTimeout","setTimeout","events","forEach","event","window","addEventListener","removeEventListener","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useActivity","_s2","$RefreshReg$"],"sources":["/home/talha/Desktop/REAL FS/frontend/src/context/ActivityStatus.js"],"sourcesContent":["// src/context/ActivityStatus.js\nimport React, { createContext, useState, useEffect, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AuthContext } from \"./AuthContext\"; // your existing AuthContext\n\nconst ActivityContext = createContext();\n\nexport const ActivityProvider = ({ children, timeout = 10000 }) => {\n  const { logout, user } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const [isActive, setIsActive] = useState(true);\n\n  useEffect(() => {\n    if (!user) return; // if not logged in, do nothing\n\n    let timer;\n\n    const resetTimer = () => {\n      setIsActive(true);\n      clearTimeout(timer);\n      timer = setTimeout(() => {\n        setIsActive(false);\n        logout();\n        navigate(\"/login\");\n      }, timeout);\n    };\n\n    const events = [\"mousemove\", \"keydown\", \"scroll\", \"touchstart\"];\n\n    events.forEach((event) => window.addEventListener(event, resetTimer));\n\n    resetTimer(); // start timer immediately\n\n    return () => {\n      clearTimeout(timer);\n      events.forEach((event) => window.removeEventListener(event, resetTimer));\n    };\n  }, [logout, navigate, timeout, user]);\n\n  return (\n    <ActivityContext.Provider value={{ isActive }}>\n      {children}\n    </ActivityContext.Provider>\n  );\n};\n\n// Custom hook for easier use in components\nexport const useActivity = () => useContext(ActivityContext);\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC7E,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,eAAe,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,eAAe,gBAAGR,aAAa,CAAC,CAAC;AAEvC,OAAO,MAAMS,gBAAgB,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,OAAO,GAAG;AAAM,CAAC,KAAK;EAAAC,EAAA;EACjE,MAAM;IAAEC,MAAM;IAAEC;EAAK,CAAC,GAAGX,UAAU,CAACE,WAAW,CAAC;EAChD,MAAMU,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd,IAAI,CAACY,IAAI,EAAE,OAAO,CAAC;;IAEnB,IAAII,KAAK;IAET,MAAMC,UAAU,GAAGA,CAAA,KAAM;MACvBF,WAAW,CAAC,IAAI,CAAC;MACjBG,YAAY,CAACF,KAAK,CAAC;MACnBA,KAAK,GAAGG,UAAU,CAAC,MAAM;QACvBJ,WAAW,CAAC,KAAK,CAAC;QAClBJ,MAAM,CAAC,CAAC;QACRE,QAAQ,CAAC,QAAQ,CAAC;MACpB,CAAC,EAAEJ,OAAO,CAAC;IACb,CAAC;IAED,MAAMW,MAAM,GAAG,CAAC,WAAW,EAAE,SAAS,EAAE,QAAQ,EAAE,YAAY,CAAC;IAE/DA,MAAM,CAACC,OAAO,CAAEC,KAAK,IAAKC,MAAM,CAACC,gBAAgB,CAACF,KAAK,EAAEL,UAAU,CAAC,CAAC;IAErEA,UAAU,CAAC,CAAC,CAAC,CAAC;;IAEd,OAAO,MAAM;MACXC,YAAY,CAACF,KAAK,CAAC;MACnBI,MAAM,CAACC,OAAO,CAAEC,KAAK,IAAKC,MAAM,CAACE,mBAAmB,CAACH,KAAK,EAAEL,UAAU,CAAC,CAAC;IAC1E,CAAC;EACH,CAAC,EAAE,CAACN,MAAM,EAAEE,QAAQ,EAAEJ,OAAO,EAAEG,IAAI,CAAC,CAAC;EAErC,oBACEP,OAAA,CAACC,eAAe,CAACoB,QAAQ;IAACC,KAAK,EAAE;MAAEb;IAAS,CAAE;IAAAN,QAAA,EAC3CA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;;AAED;AAAArB,EAAA,CAvCaH,gBAAgB;EAAA,QAEVL,WAAW;AAAA;AAAA8B,EAAA,GAFjBzB,gBAAgB;AAwC7B,OAAO,MAAM0B,WAAW,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMjC,UAAU,CAACK,eAAe,CAAC;AAAA;AAAC4B,GAAA,CAAhDD,WAAW;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}