{"ast":null,"code":"var _jsxFileName = \"/home/talha/Desktop/REAL FS/frontend/src/pages/Contact.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../styles/Contact.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Contact() {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  // Maximum words allowed\n  const maxWords = 3000;\n\n  // Count words in the message\n  const wordCount = message.trim() === \"\" ? 0 : message.trim().split(/\\s+/).length;\n\n  // Handle input change with HARD LIMIT\n  const handleMessageChange = e => {\n    const words = e.target.value.trim().split(/\\s+/);\n    if (words.length <= maxWords) {\n      setMessage(e.target.value);\n    }\n  };\n\n  // Handle form submit -> send to Flask backend\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const res = await fetch(\"http://127.0.0.1:5000/api/contact\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name,\n          email,\n          message\n        })\n      });\n      const data = await res.json();\n\n      // ✅ Show backend error if any\n      if (!res.ok) {\n        alert(data.error || \"Failed to send message. Try again!\");\n        return;\n      }\n      alert(data.message || \"Message sent successfully!\");\n\n      // Clear inputs after success\n      setName(\"\");\n      setEmail(\"\");\n      setMessage(\"\");\n    } catch (err) {\n      console.error(\"Error submitting form:\", err);\n      alert(\"Failed to send message. Try again!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contact-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"contact-heading\",\n      children: /*#__PURE__*/_jsxDEV(\"u\", {\n        children: \"Contact Me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 39\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"contact-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Complete Name\",\n        className: \"contact-input\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Enter Email\",\n        className: \"contact-input\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Enter message details here\",\n        className: \"contact-textarea\",\n        value: message,\n        onChange: handleMessageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"word-count\",\n        children: [wordCount, \"/\", maxWords, \" Words\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"contact-submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"contact-email-note\",\n      children: [\"OR you can also Email me at\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"mailto:mtalhafaizan30@mail.com\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"mtalhafaizan30@gmail.com\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(Contact, \"9GICPGvQY+Z+7fmKUi6EH98WCgs=\");\n_c = Contact;\nexport default Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Contact","_s","message","setMessage","name","setName","email","setEmail","maxWords","wordCount","trim","split","length","handleMessageChange","e","words","target","value","handleSubmit","preventDefault","res","fetch","method","headers","body","JSON","stringify","data","json","ok","alert","error","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","href","rel","_c","$RefreshReg$"],"sources":["/home/talha/Desktop/REAL FS/frontend/src/pages/Contact.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"../styles/Contact.css\";\n\nfunction Contact() {\n  const [message, setMessage] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  // Maximum words allowed\n  const maxWords = 3000;\n\n  // Count words in the message\n  const wordCount = message.trim() === \"\" ? 0 : message.trim().split(/\\s+/).length;\n\n  // Handle input change with HARD LIMIT\n  const handleMessageChange = (e) => {\n    const words = e.target.value.trim().split(/\\s+/);\n    if (words.length <= maxWords) {\n      setMessage(e.target.value);\n    }\n  };\n\n  // Handle form submit -> send to Flask backend\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const res = await fetch(\"http://127.0.0.1:5000/api/contact\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ name, email, message }),\n      });\n\n      const data = await res.json();\n\n      // ✅ Show backend error if any\n      if (!res.ok) {\n        alert(data.error || \"Failed to send message. Try again!\");\n        return;\n      }\n\n      alert(data.message || \"Message sent successfully!\");\n\n      // Clear inputs after success\n      setName(\"\");\n      setEmail(\"\");\n      setMessage(\"\");\n    } catch (err) {\n      console.error(\"Error submitting form:\", err);\n      alert(\"Failed to send message. Try again!\");\n    }\n  };\n\n  return (\n    <div className=\"contact-page\">\n      <h1 className=\"contact-heading\"><u>Contact Me</u></h1>\n\n      {/* Contact Form */}\n      <form className=\"contact-form\" onSubmit={handleSubmit}>\n        <input \n          type=\"text\" \n          placeholder=\"Enter Complete Name\" \n          className=\"contact-input\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n        <input \n          type=\"email\" \n          placeholder=\"Enter Email\" \n          className=\"contact-input\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n\n        {/* Textarea with word limit */}\n        <textarea\n          placeholder=\"Enter message details here\"\n          className=\"contact-textarea\"\n          value={message}\n          onChange={handleMessageChange}\n        />\n\n        {/* Word count display */}\n        <div className=\"word-count\">\n          {wordCount}/{maxWords} Words\n        </div>\n\n        <button type=\"submit\" className=\"contact-submit\">Submit</button>\n      </form>\n\n      {/* Email message */}\n      <p className=\"contact-email-note\">\n        OR you can also Email me at{\" \"}\n        <a\n          href=\"mailto:mtalhafaizan30@mail.com\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          mtalhafaizan30@gmail.com\n        </a>\n      </p>\n    </div>\n  );\n}\n\nexport default Contact;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}