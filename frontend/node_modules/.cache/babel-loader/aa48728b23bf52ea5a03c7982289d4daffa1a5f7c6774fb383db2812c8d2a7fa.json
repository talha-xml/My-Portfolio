{"ast":null,"code":"var _jsxFileName = \"/home/talha/Desktop/REAL FS/frontend/src/context/ActivityStatus.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/context/ActivityStatus.js\nimport React, { createContext, useState, useEffect, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AuthContext } from \"./AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ActivityContext = /*#__PURE__*/createContext();\nexport const ActivityProvider = ({\n  children\n}) => {\n  _s();\n  const {\n    logout,\n    user\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const [isActive, setIsActive] = useState(true);\n  const [showWarning, setShowWarning] = useState(false);\n  const [countdown, setCountdown] = useState(10); // countdown seconds\n\n  useEffect(() => {\n    if (!user) return; // no logged-in user\n\n    let inactivityTimer;\n    let countdownTimer;\n    const resetTimers = () => {\n      setIsActive(true);\n      setShowWarning(false);\n      setCountdown(10);\n      clearTimeout(inactivityTimer);\n      clearInterval(countdownTimer);\n\n      // Start 5-second inactivity timer\n      inactivityTimer = setTimeout(() => {\n        setShowWarning(true); // show popover\n\n        // Start 10-second countdown\n        countdownTimer = setInterval(() => {\n          setCountdown(prev => {\n            if (prev <= 1) {\n              clearInterval(countdownTimer);\n              logout();\n              navigate(\"/login\");\n              return 0;\n            }\n            return prev - 1;\n          });\n        }, 1000);\n      }, 5000); // 5 seconds before showing popover\n    };\n    const events = [\"mousemove\", \"keydown\", \"scroll\", \"touchstart\"];\n    events.forEach(event => window.addEventListener(event, resetTimers));\n    resetTimers(); // initialize timers immediately\n\n    return () => {\n      clearTimeout(inactivityTimer);\n      clearInterval(countdownTimer);\n      events.forEach(event => window.removeEventListener(event, resetTimers));\n    };\n  }, [logout, navigate, user]);\n  return /*#__PURE__*/_jsxDEV(ActivityContext.Provider, {\n    value: {\n      isActive,\n      showWarning,\n      countdown\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n// custom hook\n_s(ActivityProvider, \"XnlLCspA2MPjbAuYJRNZs4D0QVk=\", false, function () {\n  return [useNavigate];\n});\n_c = ActivityProvider;\nexport const useActivity = () => {\n  _s2();\n  return useContext(ActivityContext);\n};\n_s2(useActivity, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"ActivityProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","useNavigate","AuthContext","jsxDEV","_jsxDEV","ActivityContext","ActivityProvider","children","_s","logout","user","navigate","isActive","setIsActive","showWarning","setShowWarning","countdown","setCountdown","inactivityTimer","countdownTimer","resetTimers","clearTimeout","clearInterval","setTimeout","setInterval","prev","events","forEach","event","window","addEventListener","removeEventListener","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useActivity","_s2","$RefreshReg$"],"sources":["/home/talha/Desktop/REAL FS/frontend/src/context/ActivityStatus.js"],"sourcesContent":["// src/context/ActivityStatus.js\nimport React, { createContext, useState, useEffect, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AuthContext } from \"./AuthContext\";\n\nconst ActivityContext = createContext();\n\nexport const ActivityProvider = ({ children }) => {\n  const { logout, user } = useContext(AuthContext);\n  const navigate = useNavigate();\n\n  const [isActive, setIsActive] = useState(true);\n  const [showWarning, setShowWarning] = useState(false);\n  const [countdown, setCountdown] = useState(10); // countdown seconds\n\n  useEffect(() => {\n    if (!user) return; // no logged-in user\n\n    let inactivityTimer;\n    let countdownTimer;\n\n    const resetTimers = () => {\n      setIsActive(true);\n      setShowWarning(false);\n      setCountdown(10);\n\n      clearTimeout(inactivityTimer);\n      clearInterval(countdownTimer);\n\n      // Start 5-second inactivity timer\n      inactivityTimer = setTimeout(() => {\n        setShowWarning(true); // show popover\n\n        // Start 10-second countdown\n        countdownTimer = setInterval(() => {\n          setCountdown((prev) => {\n            if (prev <= 1) {\n              clearInterval(countdownTimer);\n              logout();\n              navigate(\"/login\");\n              return 0;\n            }\n            return prev - 1;\n          });\n        }, 1000);\n      }, 5000); // 5 seconds before showing popover\n    };\n\n    const events = [\"mousemove\", \"keydown\", \"scroll\", \"touchstart\"];\n    events.forEach((event) => window.addEventListener(event, resetTimers));\n\n    resetTimers(); // initialize timers immediately\n\n    return () => {\n      clearTimeout(inactivityTimer);\n      clearInterval(countdownTimer);\n      events.forEach((event) => window.removeEventListener(event, resetTimers));\n    };\n  }, [logout, navigate, user]);\n\n  return (\n    <ActivityContext.Provider value={{ isActive, showWarning, countdown }}>\n      {children}\n    </ActivityContext.Provider>\n  );\n};\n\n// custom hook\nexport const useActivity = () => useContext(ActivityContext);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}