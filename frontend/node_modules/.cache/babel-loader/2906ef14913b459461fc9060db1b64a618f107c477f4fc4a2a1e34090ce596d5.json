{"ast":null,"code":"var _jsxFileName = \"/home/talha/Desktop/REAL FS/frontend/src/pages/About.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport \"../styles/About.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction About() {\n  _s();\n  // Wrap in useMemo so it doesnâ€™t get re-created every render\n  const sections = useMemo(() => [{\n    heading: \"Name\",\n    content: \"M. Talha Faizan\"\n  }, {\n    heading: \"Introduction\",\n    content: \"Hi! I am a passionate developer with a keen interest in building modern web applications. I like to explore new technologies, including Artificial Intelligence (AI) and Machine Learning (ML), and continuously improving my skills.\"\n  }, {\n    heading: \"Purpose of this Portfolio\",\n    content: \"This portfolio is created to showcase my projects, demonstrate my abilities, and provide a platform for potential collaborators or employers to get to know my work.\"\n  }, {\n    heading: \"Current Situation\",\n    content: \"Currently, I am pursuing Computer Science at UCP and actively working on personal and academic projects to strengthen my development skills.\"\n  }, {\n    heading: \"Future Goals\",\n    content: \"I aim to become a full-stack developer, contribute to open-source projects, explore AI and ML applications, and eventually work on impactful software solutions that solve real-world problems.\"\n  }], []); // ðŸ‘ˆ empty deps â†’ stays constant across renders\n\n  // Typing effect state\n  const [displayedText, setDisplayedText] = useState([\"\"]);\n  const [currentSection, setCurrentSection] = useState(0);\n  const [currentChar, setCurrentChar] = useState(0);\n  useEffect(() => {\n    if (currentSection < sections.length) {\n      const content = sections[currentSection].content;\n      if (currentChar < content.length) {\n        const timeout = setTimeout(() => {\n          setDisplayedText(prev => {\n            const newTexts = [...prev];\n            newTexts[currentSection] = (newTexts[currentSection] || \"\") + content[currentChar];\n            return newTexts;\n          });\n          setCurrentChar(prev => prev + 1);\n        }, 1);\n        return () => clearTimeout(timeout);\n      } else {\n        setCurrentSection(prev => prev + 1);\n        setCurrentChar(0);\n        setDisplayedText(prev => [...prev, \"\"]);\n      }\n    }\n  }, [currentChar, currentSection, sections]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"about-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"about-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: /*#__PURE__*/_jsxDEV(\"u\", {\n          children: \"About Me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"about-content\",\n        children: sections.map((section, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"about-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"about-heading\",\n            children: [section.heading, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: displayedText[index]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(About, \"cakiAgKiNRAjQwKHQJjPtocSzVM=\");\n_c = About;\nexport default About;\nvar _c;\n$RefreshReg$(_c, \"About\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","jsxDEV","_jsxDEV","About","_s","sections","heading","content","displayedText","setDisplayedText","currentSection","setCurrentSection","currentChar","setCurrentChar","length","timeout","setTimeout","prev","newTexts","clearTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","section","index","_c","$RefreshReg$"],"sources":["/home/talha/Desktop/REAL FS/frontend/src/pages/About.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\nimport \"../styles/About.css\";\n\nfunction About() {\n  // Wrap in useMemo so it doesnâ€™t get re-created every render\n  const sections = useMemo(() => [\n    {\n      heading: \"Name\",\n      content: \"M. Talha Faizan\",\n    },\n    {\n      heading: \"Introduction\",\n      content:\n        \"Hi! I am a passionate developer with a keen interest in building modern web applications. I like to explore new technologies, including Artificial Intelligence (AI) and Machine Learning (ML), and continuously improving my skills.\",\n    },\n    {\n      heading: \"Purpose of this Portfolio\",\n      content:\n        \"This portfolio is created to showcase my projects, demonstrate my abilities, and provide a platform for potential collaborators or employers to get to know my work.\",\n    },\n    {\n      heading: \"Current Situation\",\n      content:\n        \"Currently, I am pursuing Computer Science at UCP and actively working on personal and academic projects to strengthen my development skills.\",\n    },\n    {\n      heading: \"Future Goals\",\n      content:\n        \"I aim to become a full-stack developer, contribute to open-source projects, explore AI and ML applications, and eventually work on impactful software solutions that solve real-world problems.\",\n    },\n  ], []); // ðŸ‘ˆ empty deps â†’ stays constant across renders\n\n  // Typing effect state\n  const [displayedText, setDisplayedText] = useState([\"\"]);\n  const [currentSection, setCurrentSection] = useState(0);\n  const [currentChar, setCurrentChar] = useState(0);\n\n  useEffect(() => {\n    if (currentSection < sections.length) {\n      const content = sections[currentSection].content;\n      if (currentChar < content.length) {\n        const timeout = setTimeout(() => {\n          setDisplayedText((prev) => {\n            const newTexts = [...prev];\n            newTexts[currentSection] =\n              (newTexts[currentSection] || \"\") + content[currentChar];\n            return newTexts;\n          });\n          setCurrentChar((prev) => prev + 1);\n        }, 1);\n        return () => clearTimeout(timeout);\n      } else {\n        setCurrentSection((prev) => prev + 1);\n        setCurrentChar(0);\n        setDisplayedText((prev) => [...prev, \"\"]);\n      }\n    }\n  }, [currentChar, currentSection, sections]);\n\n  return (\n    <div className=\"about-page\">\n      <div className=\"about-container\">\n        <h1>\n          <u>About Me</u>\n        </h1>\n        <div className=\"about-content\">\n          {sections.map((section, index) => (\n            <div key={index} className=\"about-section\">\n              <h3 className=\"about-heading\">{section.heading}:</h3>\n              <p>{displayedText[index]}</p>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default About;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}