{"ast":null,"code":"var _jsxFileName = \"/home/talha/Desktop/REAL FS/frontend/src/pages/About.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../styles/About.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction About() {\n  _s();\n  const paragraphs = [\"Name: M. Talha Faizan\", \"Introduction: Hi! I am a passionate developer with a keen interest in building modern web applications. I love exploring new technologies, including Artificial Intelligence (AI) and Machine Learning (ML), and continuously improving my skills.\", \"Purpose of this Portfolio: This portfolio is created to showcase my projects, demonstrate my abilities, and provide a platform for potential collaborators or employers to get to know my work.\", \"Current Situation: Currently, I am pursuing Computer Science at UCP and actively working on personal and academic projects to strengthen my development skills.\", \"Future Goals: I aim to become a full-stack developer, contribute to open-source projects, explore AI and ML applications, and eventually work on impactful software solutions that solve real-world problems.\"];\n  const [displayedText, setDisplayedText] = useState([\"\"]);\n  const [currentParagraph, setCurrentParagraph] = useState(0);\n  const [currentChar, setCurrentChar] = useState(0);\n  useEffect(() => {\n    if (currentParagraph < paragraphs.length) {\n      if (currentChar < paragraphs[currentParagraph].length) {\n        const timeout = setTimeout(() => {\n          setDisplayedText(prev => {\n            const newTexts = [...prev];\n            newTexts[currentParagraph] = (newTexts[currentParagraph] || \"\") + paragraphs[currentParagraph][currentChar];\n            return newTexts;\n          });\n          setCurrentChar(prev => prev + 1);\n        }, 25); // typing speed\n        return () => clearTimeout(timeout);\n      } else {\n        // Move to next paragraph\n        setCurrentParagraph(prev => prev + 1);\n        setCurrentChar(0);\n        setDisplayedText(prev => [...prev, \"\"]);\n      }\n    }\n  }, [currentChar, currentParagraph, paragraphs]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"about-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"about-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: /*#__PURE__*/_jsxDEV(\"u\", {\n          children: \"About Me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"about-content\",\n        children: displayedText.map((text, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(About, \"SWTY3bGROtbLv6BFuG4k1UJy4Rc=\");\n_c = About;\nexport default About;\nvar _c;\n$RefreshReg$(_c, \"About\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","About","_s","paragraphs","displayedText","setDisplayedText","currentParagraph","setCurrentParagraph","currentChar","setCurrentChar","length","timeout","setTimeout","prev","newTexts","clearTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","text","index","_c","$RefreshReg$"],"sources":["/home/talha/Desktop/REAL FS/frontend/src/pages/About.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../styles/About.css\";\n\nfunction About() {\n  const paragraphs = [\n    \"Name: M. Talha Faizan\",\n    \"Introduction: Hi! I am a passionate developer with a keen interest in building modern web applications. I love exploring new technologies, including Artificial Intelligence (AI) and Machine Learning (ML), and continuously improving my skills.\",\n    \"Purpose of this Portfolio: This portfolio is created to showcase my projects, demonstrate my abilities, and provide a platform for potential collaborators or employers to get to know my work.\",\n    \"Current Situation: Currently, I am pursuing Computer Science at UCP and actively working on personal and academic projects to strengthen my development skills.\",\n    \"Future Goals: I aim to become a full-stack developer, contribute to open-source projects, explore AI and ML applications, and eventually work on impactful software solutions that solve real-world problems.\"\n  ];\n\n  const [displayedText, setDisplayedText] = useState([\"\"]);\n  const [currentParagraph, setCurrentParagraph] = useState(0);\n  const [currentChar, setCurrentChar] = useState(0);\n\n  useEffect(() => {\n    if (currentParagraph < paragraphs.length) {\n      if (currentChar < paragraphs[currentParagraph].length) {\n        const timeout = setTimeout(() => {\n          setDisplayedText((prev) => {\n            const newTexts = [...prev];\n            newTexts[currentParagraph] =\n              (newTexts[currentParagraph] || \"\") +\n              paragraphs[currentParagraph][currentChar];\n            return newTexts;\n          });\n          setCurrentChar((prev) => prev + 1);\n        }, 25); // typing speed\n        return () => clearTimeout(timeout);\n      } else {\n        // Move to next paragraph\n        setCurrentParagraph((prev) => prev + 1);\n        setCurrentChar(0);\n        setDisplayedText((prev) => [...prev, \"\"]);\n      }\n    }\n  }, [currentChar, currentParagraph, paragraphs]);\n\n  return (\n    <div className=\"about-page\">\n      <div className=\"about-container\">\n        <h1>\n          <u>About Me</u>\n        </h1>\n        <div className=\"about-content\">\n          {displayedText.map((text, index) => (\n            <p key={index}>{text}</p>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default About;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAMC,UAAU,GAAG,CACjB,uBAAuB,EACvB,oPAAoP,EACpP,iMAAiM,EACjM,iKAAiK,EACjK,+MAA+M,CAChN;EAED,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EACxD,MAAM,CAACS,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAC3D,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EAEjDC,SAAS,CAAC,MAAM;IACd,IAAIQ,gBAAgB,GAAGH,UAAU,CAACO,MAAM,EAAE;MACxC,IAAIF,WAAW,GAAGL,UAAU,CAACG,gBAAgB,CAAC,CAACI,MAAM,EAAE;QACrD,MAAMC,OAAO,GAAGC,UAAU,CAAC,MAAM;UAC/BP,gBAAgB,CAAEQ,IAAI,IAAK;YACzB,MAAMC,QAAQ,GAAG,CAAC,GAAGD,IAAI,CAAC;YAC1BC,QAAQ,CAACR,gBAAgB,CAAC,GACxB,CAACQ,QAAQ,CAACR,gBAAgB,CAAC,IAAI,EAAE,IACjCH,UAAU,CAACG,gBAAgB,CAAC,CAACE,WAAW,CAAC;YAC3C,OAAOM,QAAQ;UACjB,CAAC,CAAC;UACFL,cAAc,CAAEI,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;QACpC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;QACR,OAAO,MAAME,YAAY,CAACJ,OAAO,CAAC;MACpC,CAAC,MAAM;QACL;QACAJ,mBAAmB,CAAEM,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;QACvCJ,cAAc,CAAC,CAAC,CAAC;QACjBJ,gBAAgB,CAAEQ,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE,EAAE,CAAC,CAAC;MAC3C;IACF;EACF,CAAC,EAAE,CAACL,WAAW,EAAEF,gBAAgB,EAAEH,UAAU,CAAC,CAAC;EAE/C,oBACEH,OAAA;IAAKgB,SAAS,EAAC,YAAY;IAAAC,QAAA,eACzBjB,OAAA;MAAKgB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BjB,OAAA;QAAAiB,QAAA,eACEjB,OAAA;UAAAiB,QAAA,EAAG;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC,eACLrB,OAAA;QAAKgB,SAAS,EAAC,eAAe;QAAAC,QAAA,EAC3Bb,aAAa,CAACkB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC7BxB,OAAA;UAAAiB,QAAA,EAAgBM;QAAI,GAAZC,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CACzB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACnB,EAAA,CAlDQD,KAAK;AAAAwB,EAAA,GAALxB,KAAK;AAoDd,eAAeA,KAAK;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}